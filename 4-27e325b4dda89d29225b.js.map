{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/terra/cardList.js","webpack:///./src/components/terra/card.js"],"names":["__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","StaticQueryContext","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","sortedJsonCardList","sort","b","id","map","jsonCard","Card","name","color","castingCost","imageName","rarity","notes","rulesText","COLOR","freeze","WHITE","BLUE","BLACK","RED","GREEN","MYTHIC","RARE","UNCOMMON","COMMON","this","cmc","indexOf","generic","isNaN","parseInt","genericAsString","toString","colored","slice","length","getCmc","imageUrl","withPrefix","assignUuid","uuid","v4"],"mappings":"0FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAC,IAAAX,EAAAC,EAAAC,EAAA,sBAAAO,EAAA,aAAAT,EAAA,SAYMY,EAAqBC,IAAMC,cAAc,IAEzCX,EAAc,SAAAY,GAAK,OACvBV,EAAAM,EAAAK,cAACJ,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEH,EAAMI,MACLD,EAAgBH,EAAMK,QAAUF,EAAgBH,EAAMK,OAAOD,MAEtDJ,EAAMM,QAAUN,EAAMO,UAC5BP,EAAMI,KAAOJ,EAAMI,KAAKA,KAAOD,EAAgBH,EAAMK,OAAOD,MAGvDd,EAAAM,EAAAK,cAAA,uCA4Bfb,EAAYoB,UAAY,CACtBJ,KAAMK,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAO3B,IAAMG,cAAcyB,IAApBC,OAAAC,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBV,EAAiBX,UAAY,CAC3Ba,SAAUZ,IAAUqB,MAAM,CACxBL,SAAUhB,IAAUE,OAAOC,aAC1BA,YAGUO,yECjBTY,EAFed,EAAQ,KAEWe,KAAK,SAACpC,EAAGqC,GAAJ,OAAUrC,EAAEsC,GAAKD,EAAEC,KAEjDH,MAAmBI,IAAI,SAAAC,GAClC,OAAO,IAAIC,IACPD,EAASF,GACTE,EAASE,KACTF,EAASG,MACTH,EAASI,YACTJ,EAASK,UACTL,EAASM,OACTN,EAASO,MACTP,EAASQ,4JCZJC,EAAQlB,OAAOmB,OAAO,CAC/BC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,MAAO,MAUUd,GAPCV,OAAOmB,OAAO,CAChCM,OAAQ,IACRC,KAAM,IACNC,SAAU,IACVC,OAAQ,iBAIR,SAAAlB,EAAYH,EAAII,EAAMC,EAAOC,EAAaC,EAAWC,EAAQC,EAAOC,GAChEY,KAAKtB,GAAKA,EACVsB,KAAKlB,KAAOA,EACZkB,KAAKjB,MAAQA,EACbiB,KAAKC,IAab,SAAgBjB,GACZ,IAAkC,IAA9BA,EAAYkB,QAAQ,KACpB,MAAO,IAEX,IAAMC,EAAUC,MAAMC,SAASrB,EAAa,KAAO,EAAIqB,SAASrB,EAAa,IACvEsB,EAA8B,IAAZH,EAAgB,GAAKA,EAAQI,WAC/CC,EAAUxB,EAAYyB,MAAMH,EAAgBI,QAAQA,OAC1D,OAAOP,EAAUK,EApBFG,CAAO3B,GAClBgB,KAAKY,SAAWC,YAAU,gBAAiB5B,EAAjB,QAC1Be,KAAKd,OAASA,EACdc,KAAKb,MAAQA,EACba,KAAKZ,UAAYA,qBAGrB0B,WAAA,WAEI,OADAd,KAAKe,KAAOA,IAAKC,KACVhB","file":"4-27e325b4dda89d29225b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import Card from \"./card\";\r\n\r\nconst jsonCardList = require(\"./cardList.json\");\r\n\r\nconst sortedJsonCardList = jsonCardList.sort((a, b) => a.id - b.id);\r\n\r\nexport default sortedJsonCardList.map(jsonCard => {\r\n    return new Card(\r\n        jsonCard.id,\r\n        jsonCard.name,\r\n        jsonCard.color,\r\n        jsonCard.castingCost,\r\n        jsonCard.imageName,\r\n        jsonCard.rarity,\r\n        jsonCard.notes,\r\n        jsonCard.rulesText\r\n    );\r\n});\r\n","import { withPrefix } from 'gatsby';\r\nimport uuid from \"uuid\";\r\n\r\nexport const COLOR = Object.freeze({\r\n    WHITE: \"W\",\r\n    BLUE: \"U\",\r\n    BLACK: \"B\",\r\n    RED: \"R\",\r\n    GREEN: \"G\"\r\n});\r\n\r\nexport const RARITY = Object.freeze({\r\n    MYTHIC: \"M\",\r\n    RARE: \"R\",\r\n    UNCOMMON: \"U\",\r\n    COMMON: \"C\"\r\n});\r\n\r\nexport default class Card {\r\n    constructor(id, name, color, castingCost, imageName, rarity, notes, rulesText) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.color = color;\r\n        this.cmc = getCmc(castingCost);\r\n        this.imageUrl = withPrefix(`/card-images/${imageName}.png`);\r\n        this.rarity = rarity;\r\n        this.notes = notes;\r\n        this.rulesText = rulesText;\r\n    }\r\n\r\n    assignUuid() {\r\n        this.uuid = uuid.v4();\r\n        return this;\r\n    }\r\n}\r\n\r\nfunction getCmc(castingCost) {\r\n    if (castingCost.indexOf(\"X\") !== -1) {\r\n        return \"X\";\r\n    }\r\n    const generic = isNaN(parseInt(castingCost, 10)) ? 0 : parseInt(castingCost, 10);\r\n    const genericAsString = generic === 0 ? \"\" : generic.toString();\r\n    const colored = castingCost.slice(genericAsString.length).length;\r\n    return generic + colored;\r\n}\r\n"],"sourceRoot":""}