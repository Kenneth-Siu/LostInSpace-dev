{"version":3,"sources":["webpack:///./src/components/terraPage/card.js","webpack:///./src/components/terraPage/cardList.js","webpack:///./src/components/terraPage/cardImageGallery/filterButtons.js","webpack:///./src/components/terraPage/cardImageGallery/cardImageGallery.js","webpack:///./src/components/terraPage/draftSimulator/colorAnalyser.js","webpack:///./src/components/terraPage/draftSimulator/synergyAnalyser.js","webpack:///./src/components/terraPage/draftSimulator/cardRating.js","webpack:///./src/components/terraPage/draftSimulator/cardPicker.js","webpack:///./src/components/terraPage/draftSimulator/generatePack.js","webpack:///./src/components/terraPage/draftSimulator/pack.js","webpack:///./src/components/terraPage/draftSimulator/player.js","webpack:///./src/components/terraPage/draftSimulator/cardImage.js","webpack:///./src/components/terraPage/draftSimulator/cardPiles.js","webpack:///./src/components/terraPage/draftSimulator/cardPreview.js","webpack:///./src/components/terraPage/draftSimulator/cardPick.js","webpack:///./src/components/terraPage/draftSimulator/draftSimulator.js","webpack:///./src/components/terraPage/tabs.js","webpack:///./src/components/terraPage/terraPage.js","webpack:///./src/pages/terra.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/images/headerIcon.js","webpack:///./src/components/layout/header/header.js","webpack:///./src/components/layout/layout.js"],"names":["COLOR","Object","freeze","WHITE","BLUE","BLACK","RED","GREEN","Card","MYTHIC","RARE","UNCOMMON","COMMON","id","name","color","castingCost","imageName","rarity","notes","rulesText","this","cmc","indexOf","generic","isNaN","parseInt","genericAsString","toString","colored","slice","length","getCmc","imageUrl","withPrefix","assignUuid","uuid","v4","sortedJsonCardList","require","sort","a","b","map","jsonCard","FILTER","NONE","GOLD","COLORLESS","FilterButtons","render","react_default","createElement","className","styles","container","getButton","filter","_this","button","props","selected","onClick","handleClick","onFilterChange","React","Component","CardImageGallery","_React$Component","call","state","_this2","Fragment","filterButtons_FilterButtons","changeFilter","cardImagesContainer","getFilteredCards","card","cardContainer","key","src","alt","cardName","setState","_this3","cardList","ColorAnalyser","existingPickRatings","potentialPickRating","white","Math","random","blue","black","red","green","totalPicks","countRatings","countRating","generateFuzz","getModifier","cardColors","max","apply","getModifierArray","min","ratings","forEach","rating","ColorCount","colorCount","index","getColorFuzz","rankByLowest","split","getModifierForSingleColor","fuzzedWhite","getTotalFuzzyCount","fuzzedBlue","fuzzedBlack","fuzzedRed","fuzzedGreen","whiteFuzz","blueFuzz","blackFuzz","redFuzz","greenFuzz","SynergyAnalyser","picks","pick","artifact","etb","lifegain","lifeloss","equipment","creatureTokens","fodder","creatureFodder","artifactFodder","police","evasion","flash","cheating","scry","combatTrick","mutantXeno","countCards","countCard","getPotentialPowerOfCard","potential","power","fractionOfPotential","getFractionOfPotential","getOptimism","getExistingPowerOfCard","fractionOfPotentialFulfilled","prop","synergies","undefined","Error","cards","tags","CardRating","ColorPreferences","colorAnalyser","CardPicker","decidePick","pack","evaluatePack","makePick","evaluateCard","synergyAnalyser","uncoloredPickRatings","uncoloredCardRating","aggregateColoredPickRatings","pickRating","reduce","coloredCardRating","getColorPreferences","packRatings","accumulator","currentValue","mythics","rares","uncommons","commons","generatePack","push","cloneDeep","sample","_loop","i","bannedCardColors","otherColorUncommons","uncommon","some","cardColor","generateUncommons","singleColor","coloredCommons","common","generateCommonOfColor","_loop2","existingCardColors","existingColor","bannedColor","otherColorCommons","nonRepeatedCommons","shuffle","generateCommons","Pack","Player","leftHandPlayer","nextPack","sideboard","cardPicker","rightHandPlayer","setRightHandPlayer","cardIndex","findIndex","cardInPack","pullAt","passPack","passDirection","receivePack","computerPick","sideboardUnwantedCards","openPack","moveFromPicksToSideboard","_this$sideboard","removedCard","remove","moveFromSideboardToPicks","_this$picks","setLeftHandPlayer","_this$sideboard2","colorPreferences","removedCards","createTableOfPlayers","players","newPlayer","numOfPlayers","CardImage","_ref","url","additionalClasses","onMouseEnter","CardPiles","piles","pilify","sizeOfLargestPile","pile","cardPiles","getPileElement","getPileCardImageElement","onMouseLeave","_this4","alphetisedCards","splitIntoCmcPiles","sortByColor","CardPreview","cardPreview","CardPick","DraftSimulator","computerPlayers","humanPlayer","shift","isClient","packNumber","computerColorPreferences","player","computerPicks","showAIRatings","showAIPicks","hoveredCardUrl","componentDidMount","draftSim","boosterPack","header","getCardPickElement","cardPiles_CardPiles","handleMouseEnterPileCard","handleMouseLeavePileCard","toggleAiPicksButtonContainer","toggleAIPicks","aiPicks","toPrecision","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","next","done","value","_iterator2","_isArray2","_i2","_ref2","_iterator3","_isArray3","_i3","_ref3","updatePackState","updatePicksState","computerPlayer","updateSideboardState","Tabs","selectedTabIndex","getDefaultSelectedTabIndex","content","tabsBar","tabs","tab","tabButton","onTabClick","urlHash","tabContent","windowGlobal","window","currentUrlHash","location","hash","history","replaceState","TerraPage","pages","cardImageGallery_CardImageGallery","draftSimulator_DraftSimulator","layout","pageTitle","tabs_Tabs","Terra","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape","HeaderIcon","gatsby_browser_entry","gatsby_image_default","fluid","placeholderImage","childImageSharp","_1158076013","Header","siteTitle","to","homeLink","headerIcon","Layout","Helmet_default","title","lang","href","rel","site","siteMetadata","_2262439644"],"mappings":"yMAGaA,EAAQC,OAAOC,OAAO,CAC/BC,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,MAAO,MAUUC,GAPCP,OAAOC,OAAO,CAChCO,OAAQ,IACRC,KAAM,IACNC,SAAU,IACVC,OAAQ,iBAIR,SAAAJ,EAAYK,EAAIC,EAAMC,EAAOC,EAAaC,EAAWC,EAAQC,EAAOC,GAChEC,KAAKR,GAAKA,EACVQ,KAAKP,KAAOA,EACZO,KAAKN,MAAQA,EACbM,KAAKC,IAab,SAAgBN,GACZ,IAAkC,IAA9BA,EAAYO,QAAQ,KACpB,MAAO,IAEX,IAAMC,EAAUC,MAAMC,SAASV,EAAa,KAAO,EAAIU,SAASV,EAAa,IACvEW,EAA8B,IAAZH,EAAgB,GAAKA,EAAQI,WAC/CC,EAAUb,EAAYc,MAAMH,EAAgBI,QAAQA,OAC1D,OAAOP,EAAUK,EApBFG,CAAOhB,GAClBK,KAAKY,SAAWC,YAAU,gBAAiBjB,EAAjB,QAC1BI,KAAKH,OAASA,EACdG,KAAKF,MAAQA,EACbE,KAAKD,UAAYA,qBAGrBe,WAAA,WAEI,OADAd,KAAKe,KAAOA,IAAKC,KACVhB,YC9Bf,IAIeiB,EAJMC,EAAQ,KAEWC,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE5B,GAAK6B,EAAE7B,KAE9B8B,IAAI,SAAAC,GAClC,OAAO,IAAIpC,EACPoC,EAAS/B,GACT+B,EAAS9B,KACT8B,EAAS7B,MACT6B,EAAS5B,YACT4B,EAAS3B,UACT2B,EAAS1B,OACT0B,EAASzB,MACTyB,EAASxB,+BCZJyB,EAAS5C,OAAOC,OAAO,CAChC4C,KAAM,GACN3C,MAAO,IACPC,KAAM,IACNC,MAAO,IACPC,IAAK,IACLC,MAAO,IACPwC,KAAM,IACNC,UAAW,MAGMC,oGACjBC,OAAA,WACI,OACIC,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOC,WAClBlC,KAAKmC,UAAUX,EAAO1C,MAAO,SAC7BkB,KAAKmC,UAAUX,EAAOzC,KAAM,QAC5BiB,KAAKmC,UAAUX,EAAOxC,MAAO,SAC7BgB,KAAKmC,UAAUX,EAAOvC,IAAK,OAC3Be,KAAKmC,UAAUX,EAAOtC,MAAO,SAC7Bc,KAAKmC,UAAUX,EAAOE,KAAM,QAC5B1B,KAAKmC,UAAUX,EAAOG,UAAW,iBAK9CQ,UAAA,SAAUC,EAAQ3C,GAAM,IAAA4C,EAAArC,KACpB,OACI8B,EAAAV,EAAAW,cAAA,UACIC,UAAcC,IAAOK,OAAZ,KAAsBtC,KAAKuC,MAAMH,SAAWA,EAASH,IAAOO,SAAW,IAChFC,QAAS,kBAAMJ,EAAKK,YAAYN,KAC/B3C,MAKbiD,YAAA,SAAYN,GACRpC,KAAKuC,MAAMI,eAAe3C,KAAKuC,MAAMH,SAAWA,EAASZ,EAAOC,KAAOW,OA1BpCQ,IAAMC,6BCR5BC,cACjB,SAAAA,EAAYP,GAAO,IAAAF,EAAA,OACfA,EAAAU,EAAAC,KAAAhD,KAAMuC,IAANvC,MACKiD,MAAQ,CACTb,OAAQZ,EAAO1C,OAHJuD,sCAOnBR,OAAA,WAAS,IAAAqB,EAAAlD,KACL,OACI8B,EAAAV,EAAAW,cAAAD,EAAAV,EAAA+B,SAAA,KACIrB,EAAAV,EAAAW,cAACqB,EAAD,CAAehB,OAAQpC,KAAKiD,MAAMb,OAAQO,eAAgB,SAAAP,GAAM,OAAIc,EAAKG,aAAajB,MACtFN,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOqB,qBAClBtD,KAAKuD,mBAAmBjC,IAAI,SAAAkC,GAAI,OAC7B1B,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOwB,cAAeC,IAAKF,EAAKhE,IAC5CsC,EAAAV,EAAAW,cAAA,OAAK4B,IAAKH,EAAK5C,SAAUoB,UAAWC,IAAOuB,KAAMI,IAAKJ,EAAK/D,OAC3DqC,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAO4B,UAAWL,EAAK/D,UAInDqC,EAAAV,EAAAW,cAACqB,EAAD,CAAehB,OAAQpC,KAAKiD,MAAMb,OAAQO,eAAgB,SAAAP,GAAM,OAAIc,EAAKG,aAAajB,UAKlGiB,aAAA,SAAajB,GACTpC,KAAK8D,SAAS,CACV1B,OAAQA,OAIhBmB,iBAAA,WAAmB,IAAAQ,EAAA/D,KACf,OAAOgE,EAAS5B,OAAO,SAAAoB,GACnB,OAAQO,EAAKd,MAAMb,QACf,KAAKZ,EAAOC,KACR,OAAO,EACX,KAAKD,EAAOE,KACR,OAAO8B,EAAK9D,MAAMgB,OAAS,EAC/B,KAAKc,EAAOG,UACR,OAA6B,IAAtB6B,EAAK9D,MAAMgB,OACtB,KAAKc,EAAO1C,MACR,OAAO0E,EAAK9D,QAAUf,EAAMG,MAChC,KAAK0C,EAAOzC,KACZ,OAAOyE,EAAK9D,QAAUf,EAAMI,KAC5B,KAAKyC,EAAOxC,MACZ,OAAOwE,EAAK9D,QAAUf,EAAMK,MAC5B,KAAKwC,EAAOvC,IACZ,OAAOuE,EAAK9D,QAAUf,EAAMM,IAC5B,KAAKuC,EAAOtC,MACZ,OAAOsE,EAAK9D,QAAUf,EAAMO,MAC5B,QACI,OAAO,SAnDmB0D,IAAMC,yDCN/BoB,aAEjB,SAAAA,EAAYC,EAAqBC,GAE7BnE,KAAKoE,MAAwB,GAAhBC,KAAKC,SAClBtE,KAAKuE,KAAuB,GAAhBF,KAAKC,SACjBtE,KAAKwE,MAAwB,GAAhBH,KAAKC,SAClBtE,KAAKyE,IAAsB,GAAhBJ,KAAKC,SAChBtE,KAAK0E,MAAwB,GAAhBL,KAAKC,SAElBtE,KAAK2E,WAAaT,EAAoBxD,OACtCV,KAAK4E,aAAaV,GACdC,GACAnE,KAAK6E,YAAYV,GAErBnE,KAAK8E,0CAGTC,YAAA,SAAYC,GACR,MAAmB,KAAfA,EAA0BX,KAAKY,IAALC,MAAAb,KAAYrE,KAAKmF,iBAAiB,UACzDd,KAAKe,IAALF,MAAAb,KAAYrE,KAAKmF,iBAAiBH,OAG7CJ,aAAA,SAAaS,GAAS,IAAAhD,EAAArC,KAClBqF,EAAQC,QAAQ,SAAAC,GAAM,OAAIlD,EAAKwC,YAAYU,QAG/CV,YAAA,SAAYU,IACgC,IAApCA,EAAO/B,KAAK9D,MAAMQ,QAAQ,OAAaF,KAAKoE,OAASmB,EAAOA,SACxB,IAApCA,EAAO/B,KAAK9D,MAAMQ,QAAQ,OAAaF,KAAKuE,MAAQgB,EAAOA,SACvB,IAApCA,EAAO/B,KAAK9D,MAAMQ,QAAQ,OAAaF,KAAKwE,OAASe,EAAOA,SACxB,IAApCA,EAAO/B,KAAK9D,MAAMQ,QAAQ,OAAaF,KAAKyE,KAAOc,EAAOA,SACtB,IAApCA,EAAO/B,KAAK9D,MAAMQ,QAAQ,OAAaF,KAAK0E,OAASa,EAAOA,WAGpET,aAAA,WAAe,IAAA5B,EAAAlD,KACoB,CAC3B,IAAIwF,EAAW,QAASxF,KAAKoE,OAC7B,IAAIoB,EAAW,OAAQxF,KAAKuE,MAC5B,IAAIiB,EAAW,QAASxF,KAAKwE,OAC7B,IAAIgB,EAAW,MAAOxF,KAAKyE,KAC3B,IAAIe,EAAW,QAASxF,KAAK0E,QAEmBvD,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEmE,OAASlE,EAAEkE,SAC3DD,QAAQ,SAACG,EAAYC,GACtCxC,EAAKuC,EAAWhG,KAAO,QAAUyD,EAAKyC,aAAaD,QAoB3DC,aAAA,SAAaC,GACT,OAAQA,GACJ,KAAK,EACD,OAAOvB,KAAKY,IAAI,EAAGZ,KAAKe,IAAI,GAAI,GAAuB,EAAlBpF,KAAK2E,aAC9C,KAAK,EACD,OAAON,KAAKY,IAAI,EAAGZ,KAAKe,IAAI,GAAI,IAAwB,EAAlBpF,KAAK2E,aAC/C,KAAK,EACD,OAAON,KAAKY,IAAI,EAAGZ,KAAKe,IAAI,GAAI,IAAwB,GAAlBpF,KAAK2E,aAC/C,QACI,OAAON,KAAKY,IAAsB,EAAlBjF,KAAK2E,WAAiB,GAAI,QAItDQ,iBAAA,SAAiBH,GAAY,IAAAjB,EAAA/D,KAEzB,OADmBgF,EAAWa,MAAM,IAClBvE,IAAI,SAAA5B,GAAK,OAAIqE,EAAK+B,0BAA0BpG,QAGlEoG,0BAAA,SAA0BpG,GACtB,MAAc,MAAVA,EAAsBM,KAAK+F,YAAc/F,KAAKgG,qBACpC,MAAVtG,EAAsBM,KAAKiG,WAAajG,KAAKgG,qBACnC,MAAVtG,EAAsBM,KAAKkG,YAAclG,KAAKgG,qBACpC,MAAVtG,EAAsBM,KAAKmG,UAAYnG,KAAKgG,qBACzChG,KAAKoG,YAAcpG,KAAKgG,wBAGnCA,mBAAA,WACI,OAAOhG,KAAK+F,YAAc/F,KAAKiG,WAAajG,KAAKkG,YAAclG,KAAKmG,UAAYnG,KAAKoG,sDA1CrF,OAAOpG,KAAKoE,MAAQpE,KAAKqG,6CAGzB,OAAOrG,KAAKuE,KAAOvE,KAAKsG,6CAGxB,OAAOtG,KAAKwE,MAAQxE,KAAKuG,4CAGzB,OAAOvG,KAAKyE,IAAMzE,KAAKwG,4CAGvB,OAAOxG,KAAK0E,MAAQ1E,KAAKyG,mBAkC3BjB,EACF,SAAY/F,EAAM8F,GACdvF,KAAKP,KAAOA,EACZO,KAAKuF,OAASA,GCnGDmB,aACjB,SAAAA,EAAYC,EAAOC,GACf5G,KAAK6G,SAAW,EAChB7G,KAAK8G,IAAM,EACX9G,KAAK+G,SAAW,EAChB/G,KAAKgH,SAAW,EAChBhH,KAAKiH,UAAY,EACjBjH,KAAKkH,eAAiB,EACtBlH,KAAKmH,OAAS,EACdnH,KAAKoH,eAAiB,EACtBpH,KAAKqH,eAAiB,EACtBrH,KAAKsH,OAAS,EACdtH,KAAKuH,QAAU,EACfvH,KAAKwH,MAAQ,EACbxH,KAAKyH,SAAW,EAChBzH,KAAK0H,KAAO,EACZ1H,KAAK2H,YAAc,EACnB3H,KAAK4H,WAAa,EAElB5H,KAAK2E,WAAagC,EAAMjG,OACxBV,KAAK6H,WAAWlB,GACZC,GACA5G,KAAK8H,UAAUlB,8BAIvBmB,wBAAA,SAAwBvE,GACpB,IAAKA,EAAK1D,MAAMkI,UAAW,OAAOxE,EAAK1D,MAAMmI,MAC7C,IAAMC,EAAsBlI,KAAKmI,uBAAuB3E,GACxD,OACIA,EAAK1D,MAAMmI,OACVzE,EAAK1D,MAAMkI,UAAYxE,EAAK1D,MAAMmI,QAC9BC,GAAuB,EAAIA,GAAuBlI,KAAKoI,kBAIpEC,uBAAA,SAAuB7E,GACnB,OAAKA,EAAK1D,MAAMkI,UACTxE,EAAK1D,MAAMmI,OAASzE,EAAK1D,MAAMkI,UAAYxE,EAAK1D,MAAMmI,OAASjI,KAAKmI,uBAAuB3E,GADhEA,EAAK1D,MAAMmI,SAIjDE,uBAAA,SAAuB3E,GACnB,IAAI8E,EAA+B,EAEnC,IAAK,IAAMC,KAAQ/E,EAAK1D,MAAM0I,UAAW,CACrC,QAAmBC,IAAfzI,KAAKuI,GACL,MAAM,IAAIG,MAAJ,qBAA+BH,GAEzCD,GAAgCtI,KAAKuI,GAAQ/E,EAAK1D,MAAM0I,UAAUD,GAEtE,OAAOlE,KAAKY,IAAI,EAAGqD,MAGvBT,WAAA,SAAWc,GAAO,IAAAtG,EAAArC,KACd2I,EAAMrD,QAAQ,SAAA9B,GAAI,OAAInB,EAAKyF,UAAUtE,QAGzCsE,UAAA,SAAUtE,GACN,IAAK,IAAM+E,KAAQ/E,EAAK1D,MAAM8I,KAAM,CAChC,QAAmBH,IAAfzI,KAAKuI,GACL,MAAM,IAAIG,MAAJ,qBAA+BH,GAEzCvI,KAAKuI,IAAS/E,EAAK1D,MAAM8I,KAAKL,OAItCH,YAAA,WACI,OAAO/D,KAAKY,IAAI,EAAGZ,KAAKe,IAAI,EAAK,IAAwB,GAAlBpF,KAAK2E,mBCnE/BkE,EACjB,SAAYrF,EAAM+B,GACdvF,KAAKwD,KAAOA,EACZxD,KAAKuF,OAASA,GCCTuD,EACT,SAAYC,GACR/I,KAAKoE,MAAQ2E,EAAchE,YAAY,KACvC/E,KAAKuE,KAAOwE,EAAchE,YAAY,KACtC/E,KAAKwE,MAAQuE,EAAchE,YAAY,KACvC/E,KAAKyE,IAAMsE,EAAchE,YAAY,KACrC/E,KAAK0E,MAAQqE,EAAchE,YAAY,MAI1BiE,sDACjBC,WAAA,SAAWC,EAAMvC,GACb,IAAKuC,GAA8B,IAAtBA,EAAKP,MAAMjI,OACpB,MAAM,IAAIgI,MAAM,sEAGpB,OAFA1I,KAAK2G,MAAQA,EACb3G,KAAKmJ,aAAaxC,EAAOuC,GAClBlJ,KAAKoJ,cAGhBC,aAAA,SAAa1C,EAAOnD,GAChB,IAAM8F,EAAkB,IAAI5C,EAAgBC,EAAOnD,GAC7C+F,EAAuB5C,EAAMrF,IAC/B,SAAAsF,GAAI,OAAI,IAAIiC,EAAWjC,EAAM0C,EAAgBjB,uBAAuBzB,MAElE4C,EAAsB,IAAIX,EAAWrF,EAAM8F,EAAgBvB,wBAAwBvE,IACnFuF,EAAgB,IAAI9E,EAAcsF,EAAsBC,GAIxDC,EAHqBF,EAAqBjI,IAC5C,SAAAoI,GAAU,OAAIA,EAAWnE,OAASwD,EAAchE,YAAY2E,EAAWlG,KAAK9D,SAEzBiK,OAAO,SAACvI,EAAGC,GAAJ,OAAUD,EAAIC,GAAG,GACzEuI,EAAoBJ,EAAoBjE,OAASwD,EAAchE,YAAYvB,EAAK9D,OACtF,OAAO,IAAImJ,EAAWrF,EAAMiG,EAA8BG,MAG9DC,oBAAA,SAAoBlD,GAChB,IAAM2C,EAAkB,IAAI5C,EAAgBC,GACtC4C,EAAuB5C,EAAMrF,IAC/B,SAAAsF,GAAI,OAAI,IAAIiC,EAAWjC,EAAM0C,EAAgBjB,uBAAuBzB,MAElEmC,EAAgB,IAAI9E,EAAcsF,GACxC,OAAO,IAAIT,EAAiBC,MAGhCI,aAAA,SAAaxC,EAAOuC,GAAM,IAAA7G,EAAArC,KACtBA,KAAK8J,YAAcZ,EAAKP,MAAMrH,IAAI,SAAAkC,GAAI,OAAInB,EAAKgH,aAAa1C,EAAOnD,QAGvE4F,SAAA,WACI,OAAOpJ,KAAK8J,YAAYH,OAAO,SAACI,EAAaC,GACzC,OAAIA,EAAazE,QAAUwE,EAAYxE,OAAeyE,EAC/CD,IACRvG,oBCpDLyG,EAAUjG,EAAS5B,OAAO,SAAAoB,GAAI,MAAoB,MAAhBA,EAAK3D,SACvCqK,EAAQlG,EAAS5B,OAAO,SAAAoB,GAAI,MAAoB,MAAhBA,EAAK3D,SACrCsK,EAAYnG,EAAS5B,OAAO,SAAAoB,GAAI,MAAoB,MAAhBA,EAAK3D,SACzCuK,EAAUpG,EAAS5B,OAAO,SAAAoB,GAAI,MAAoB,MAAhBA,EAAK3D,SAE9B,SAASwK,IACpB,IAAM1B,EAAQ,GAQd,OAPqB,IAAjBrE,iBAAO,EAAG,GACVqE,EAAM2B,KAAKC,oBAAUC,iBAAOP,IAAUnJ,cAEtC6H,EAAM2B,KAAKC,oBAAUC,iBAAON,IAAQpJ,cAExC6H,EAAM2B,KAANpF,MAAAyD,EAKJ,WAEI,IADA,IAAMA,EAAQ,GADW8B,EAAA,SAEhBC,GACL,IAAMC,EAAmBhC,EAAMrH,IAAI,SAAAkC,GAAI,OAAIA,EAAK9D,QAC1CkL,EAAsBT,EAAU/H,OAClC,SAAAyI,GAAQ,OAAKF,EAAiBG,KAAK,SAAAC,GAAS,OAAIA,IAAcF,EAASnL,UAE3EiJ,EAAM2B,KAAKC,oBAAUC,iBAAOI,IAAsB9J,eAL7C4J,EAAI,EAAGA,EAAI,EAAGA,IAAKD,EAAnBC,GAOT,OAAO/B,EAdOqC,IACdrC,EAAM2B,KAANpF,MAAAyD,EAgBJ,WACI,IAAMA,EAAQ,GACO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC7BrD,QAAQ,SAAA2F,GAAW,OAAItC,EAAM2B,KAqB9C,SAA+BW,GAC3B,IAAMC,EAAiBd,EAAQhI,OAAO,SAAA+I,GAAM,OAAIA,EAAOzL,QAAUuL,IACjE,OAAOV,oBAAUW,EAAe5G,iBAAO,EAAG4G,EAAexK,OAAS,KAAKI,aAvBxBsK,CAAsBH,MACrE,IAJuB,IAAAI,EAAA,SAIdX,GACL,IAAMC,EAAmB,GACnBW,EAAqB3C,EAAMrH,IAAI,SAAAkC,GAAI,OAAIA,EAAK9D,QAClD4L,EAAmBhG,QAAQ,SAAA5F,GAEnB4L,EAAmBlJ,OAAO,SAAAmJ,GAAa,OAAIA,IAAkB7L,IAAOgB,QAAU,IAC7EiK,EAAiBG,KAAK,SAAAU,GAAW,OAAIA,IAAgB9L,KAEtDiL,EAAiBL,KAAK5K,KAG9B,IAAM+L,EAAoBrB,EAAQhI,OAC9B,SAAA+I,GAAM,OAAKR,EAAiBG,KAAK,SAAAC,GAAS,OAAIA,IAAcI,EAAOzL,UAEjEgM,EAAqBD,EAAkBrJ,OAAO,SAAA+I,GAAM,OAAKxC,EAAMmC,KAAK,SAAAtH,GAAI,OAAIA,EAAKhE,KAAO2L,EAAO3L,OACrGmJ,EAAM2B,KAAKC,oBAAUC,iBAAOkB,IAAqB5K,eAf5C4J,EAAI,EAAGA,EAAI,EAAGA,IAAKW,EAAnBX,GAiBT,OAAOiB,kBAAQhD,GArCDiD,IACPjD,MCfUkD,EACjB,WACI7L,KAAK2I,MAAQ0B,KCAAyB,aACjB,SAAAA,EAAYC,GACR/L,KAAKgM,SAAW,IAAIH,EACpB7L,KAAKkJ,KAAO,KACZlJ,KAAK2G,MAAQ,GACb3G,KAAKiM,UAAY,GACjBjM,KAAKkM,WAAa,IAAIlD,EACtBhJ,KAAK+L,eAAiB,KACtB/L,KAAKmM,gBAAkB,KACnBJ,IACA/L,KAAK+L,eAAiBA,EACtB/L,KAAK+L,eAAeK,mBAAmBpM,kCAI/CoJ,SAAA,SAAS5F,GACL,IAAKxD,KAAKgM,UAA2C,IAA/BhM,KAAKgM,SAASrD,MAAMjI,OACtC,MAAM,IAAIgI,MAAM,oBAEpB1I,KAAKkJ,KAAOlJ,KAAKgM,SACjBhM,KAAKgM,SAAW,KAChB,IAAMK,EAAYC,oBAAUtM,KAAKkJ,KAAKP,MAAO,SAAA4D,GAAU,OAAIA,EAAW/M,KAAOgE,EAAKhE,KAClF,IAAmB,IAAf6M,EACA,MAAM,IAAI3D,MAAJ,qBAA+BlF,EAAK/D,KAApC,qCAEV,IAAMmH,EAAO4F,iBAAOxM,KAAKkJ,KAAKP,MAAO0D,GAAW,GAChDrM,KAAK2G,MAAM2D,KAAK1D,MAGpB6F,SAAA,SAASC,GACiB,SAAlBA,EACA1M,KAAK+L,eAAeY,YAAY3M,KAAKkJ,MAErClJ,KAAKmM,gBAAgBQ,YAAY3M,KAAKkJ,SAI9C0D,aAAA,WACI,IAAMhG,EAAO5G,KAAKkM,WAAWjD,WAAWjJ,KAAKgM,SAAUhM,KAAK2G,OAC5D3G,KAAKoJ,SAASxC,GACd5G,KAAK6M,4BAGTC,SAAA,WACI9M,KAAKgM,SAAW,IAAIH,KAGxBhC,oBAAA,WACI,OAAO7J,KAAKkM,WAAWrC,oBAAoB7J,KAAK2G,UAGpDoG,yBAAA,SAAyBvJ,GAAM,IAAAwJ,EACrBC,EAAcC,iBAAOlN,KAAK2G,MAAO,SAAAC,GAAI,OAAIA,IAASpD,KACxDwJ,EAAAhN,KAAKiM,WAAU3B,KAAfpF,MAAA8H,EAAuBC,MAG3BE,yBAAA,SAAyB3J,GAAM,IAAA4J,EACrBH,EAAcC,iBAAOlN,KAAKiM,UAAW,SAAArF,GAAI,OAAIA,IAASpD,KAC5D4J,EAAApN,KAAK2G,OAAM2D,KAAXpF,MAAAkI,EAAmBH,MAGvBI,kBAAA,SAAkBtB,GACd/L,KAAK+L,eAAiBA,EACjBA,EAAeI,iBAChBJ,EAAeK,mBAAmBpM,SAI1CoM,mBAAA,SAAmBD,GACfnM,KAAKmM,gBAAkBA,EAClBA,EAAgBJ,gBACjBI,EAAgBkB,kBAAkBrN,SAI1C2M,YAAA,SAAYzD,GACRlJ,KAAKgM,SAAW9C,KAGpB2D,uBAAA,WAAyB,IAAAS,EACfC,EAAmBvN,KAAK6J,sBACxB2D,EAAeN,iBAAOlN,KAAK2G,MAAO,SAAAC,GAEpC,OADqBA,EAAKlH,MAAMmG,MAAM,IAClBiF,KAAK,SAAApL,GACrB,MAAc,MAAVA,EAAsB6N,EAAiBnJ,MAAQ,GACrC,MAAV1E,EAAsB6N,EAAiBhJ,KAAO,GACpC,MAAV7E,EAAsB6N,EAAiB/I,MAAQ,GACrC,MAAV9E,EAAsB6N,EAAiB9I,IAAM,GACnC,MAAV/E,GAAsB6N,EAAiB7I,MAAQ,QAI3D4I,EAAAtN,KAAKiM,WAAU3B,KAAfpF,MAAAoI,EAAuBE,MAGpBC,qBAAP,WAGI,IAFA,IACMC,EAAU,GACPhD,EAAI,EAAGA,EAFK,EAEaA,IAAK,CACnC,IAAMiD,EAAkB,IAANjD,EAAU,IAAIoB,EAAW,IAAIA,EAAO4B,EAAQhD,EAAI,IAClEgD,EAAQpD,KAAKqD,GAGjB,OADAD,EAAQ,GAAGL,kBAAkBK,EAAQE,IAC9BF,0BCxGA,SAASG,EAATC,GAAmE,IAA9CC,EAA8CD,EAA9CC,IAAKC,EAAyCF,EAAzCE,kBAAmBC,EAAsBH,EAAtBG,aAAcxO,EAAQqO,EAARrO,KACtE,OACIqC,EAAAV,EAAAW,cAAA,OACI4B,IAAKoK,EACL/L,UAAS,GAAKC,IAAOuB,MAAQwK,GAAqB,IAAMA,GAAsB,IAC9EC,aAAc,WACNA,GAAcA,KAEtBrK,IAAKnE,0BCPIyO,oGACjBrM,OAAA,WAAS,IAAAQ,EAAArC,KACCmO,EAAQnO,KAAKoO,OAAOpO,KAAKuC,MAAMoG,OAC/B0F,EAAoBhK,KAAKY,IAALC,MAAAb,KAAY8J,EAAM7M,IAAI,SAAAgN,GAAI,OAAIA,EAAK5N,UAC7D,OACIoB,EAAAV,EAAAW,cAAA,OAAKC,UAAcC,IAAOsM,UAAZ,IAAyBtM,IAAO,oBAAsBoM,IAC/DF,EAAM7M,IAAI,SAACgN,EAAM5I,GAAP,OAAiBrD,EAAKmM,eAAeF,EAAM5I,SAKlE8I,eAAA,SAAeF,EAAM5I,GAAO,IAAAxC,EAAAlD,KACxB,OACI8B,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOqM,KAAM5K,IAAKgC,GAC7B4I,EAAKhN,IAAI,SAACkC,EAAMkC,GAAP,OAAiBxC,EAAKuL,wBAAwBjL,EAAMkC,SAK1E+I,wBAAA,SAAwBjL,EAAMkC,GAAO,IAAA3B,EAAA/D,KACjC,OACI8B,EAAAV,EAAAW,cAAA,OACIU,QAAS,WACDsB,EAAKxB,MAAME,SAASsB,EAAKxB,MAAME,QAAQe,IAE/CyK,aAAc,WACNlK,EAAKxB,MAAM0L,cAAclK,EAAKxB,MAAM0L,aAAazK,IAEzDkL,aAAc,WACN3K,EAAKxB,MAAMmM,cAAc3K,EAAKxB,MAAMmM,gBAE5ChL,IAAKgC,GAEL5D,EAAAV,EAAAW,cAAC8L,EAAD,CAAWnK,IAAKF,EAAKzC,KAAMgN,IAAKvK,EAAK5C,SAAUoN,kBAAmB/L,IAAOuB,KAAO,IAAMvB,IAAO,YAAcyD,SAKvH0I,OAAA,SAAOzF,GAAO,IAAAgG,EAAA3O,KACJ4O,EAAkBjG,EAAMxH,KAAK,SAACC,EAAGC,GACnC,OAAID,EAAIC,GAAW,EACfD,EAAIC,EAAU,EACX,IAEX,OAAOrB,KAAK6O,kBAAkBD,GAAiBtN,IAAI,SAAAgN,GAAI,OAAIK,EAAKG,YAAYR,QAGhFO,kBAAA,SAAkBlG,GACd,IAAMwF,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAM3C,OALAxF,EAAMrD,QAAQ,SAAA9B,GACO,MAAbA,EAAKvD,KAA4B,IAAbuD,EAAKvD,IAAWkO,EAAM,GAAG7D,KAAK9G,GAC7CA,EAAKvD,KAAO,EAAGkO,EAAM,GAAG7D,KAAK9G,GACjC2K,EAAM3K,EAAKvD,IAAM,GAAGqK,KAAK9G,KAE3B2K,KAGXW,YAAA,SAAYnG,GACR,OAAOA,EAAMxH,KAAK,SAACC,EAAGC,GAYlB,OARuB,IAAnBD,EAAE1B,MAAMgB,OAAkB,EACrBU,EAAE1B,MAAMgB,OAAS,EAAO,EAJnB,QAKCR,QAAQkB,EAAE1B,SAEF,IAAnB2B,EAAE3B,MAAMgB,OAAkB,EACrBW,EAAE3B,MAAMgB,OAAS,EAAO,EARnB,QASCR,QAAQmB,EAAE3B,cApEEkD,IAAMC,6BCA9B,SAASkM,EAATjB,GAA8B,IAAPC,EAAOD,EAAPC,IAClC,OAAOjM,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAO+M,aAAcjB,GAAOjM,EAAAV,EAAAW,cAAC8L,EAAD,CAAWE,IAAKA,KCFxD,SAASkB,EAATnB,GAAyC,IAArBrL,EAAqBqL,EAArBrL,QAAS7B,EAAYkN,EAAZlN,SACxC,OACIkB,EAAAV,EAAAW,cAAA,OAAKU,QAASA,GACVX,EAAAV,EAAAW,cAAC8L,EAAD,CAAWE,IAAKnN,2BCEPsO,cACjB,SAAAA,EAAY3M,GAAO,IAAAF,EAAA,OACfA,EAAAU,EAAAC,KAAAhD,KAAMuC,IAANvC,MACKkM,WAAa,IAAIlD,EACtB3G,EAAK8M,gBAAkBrD,EAAO2B,uBAC9BpL,EAAK+M,YAAc/M,EAAK8M,gBAAgBE,QACxChN,EAAKY,MAAQ,CACTqM,UAAU,EACVpG,KAAM7G,EAAK+M,YAAYpD,SAASrD,MAAMrH,IAAI,SAAAkC,GACtC,OAAOnB,EAAK6J,WAAW7C,aAAahH,EAAK+M,YAAYzI,MAAOnD,KAEhE+L,WAAY,EACZ5I,MAAO,GACPsF,UAAW,GACXuD,yBAA0BnN,EAAK8M,gBAAgB7N,IAAI,SAAAmO,GAAM,OAAIA,EAAO5F,wBACpE6F,cAAe,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxCC,eAAe,EACfC,aAAa,EACbC,eAAgB,MAEpBxN,EAAKqK,cAAgB,OAnBNrK,sCAsBnByN,kBAAA,WACI9P,KAAK8D,SAAS,CACVwL,UAAU,OAIlBzN,OAAA,WAAS,IAAAqB,EAAAlD,KACL,OAAKA,KAAKiD,MAAMqM,SAIZxN,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAO8N,UAClB/P,KAAKiD,MAAMiG,KAAKxI,OAAS,GACtBoB,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAO+N,aACnBlO,EAAAV,EAAAW,cAAA,MAAIC,UAAWC,IAAOgO,QAAtB,QACUjQ,KAAKiD,MAAMsM,WADrB,SACuC,GAAKvP,KAAKiD,MAAMiG,KAAKxI,OAAQ,IAChEoB,EAAAV,EAAAW,cAAA,qDAEJD,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAO0G,OAAQ3I,KAAKiD,MAAMiG,KAAK5H,IAAI,SAAAkC,GAAI,OAAIN,EAAKgN,mBAAmB1M,OAG3F1B,EAAAV,EAAAW,cAAA,MAAIC,UAAWC,IAAOgO,QAAtB,SACWjQ,KAAKiD,MAAM0D,MAAMjG,OAD5B,KACqCoB,EAAAV,EAAAW,cAAA,2DAErCD,EAAAV,EAAAW,cAACoO,EAAD,CACIxH,MAAO3I,KAAKiD,MAAM0D,MAClBlE,QAAS,SAAAe,GAAI,OAAIN,EAAK6J,yBAAyBvJ,IAC/CyK,aAAc,SAAAzK,GAAI,OAAIN,EAAKkN,yBAAyB5M,IACpDkL,aAAc,kBAAMxL,EAAKmN,8BAE7BvO,EAAAV,EAAAW,cAAA,MAAIC,UAAWC,IAAOgO,QAAtB,cACgBjQ,KAAKiD,MAAMgJ,UAAUvL,OADrC,KAC8CoB,EAAAV,EAAAW,cAAA,sDAE9CD,EAAAV,EAAAW,cAACoO,EAAD,CACIxH,MAAO3I,KAAKiD,MAAMgJ,UAClBxJ,QAAS,SAAAe,GAAI,OAAIN,EAAKiK,yBAAyB3J,IAC/CyK,aAAc,SAAAzK,GAAI,OAAIN,EAAKkN,yBAAyB5M,IACpDkL,aAAc,kBAAMxL,EAAKmN,8BAE7BvO,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOqO,8BACnBxO,EAAAV,EAAAW,cAAA,UAAQU,QAAS,kBAAMS,EAAKqN,iBAAiBvO,UAAWC,IAAOK,QAC1DtC,KAAKiD,MAAM2M,YAAc,gBAAkB,kBAGnD5P,KAAKiD,MAAM2M,aACR5P,KAAKiD,MAAMyM,cAAcpO,IAAI,SAACkP,EAAS9K,GAAV,OACzB5D,EAAAV,EAAAW,cAAA,OAAKC,UAAU,MAAM0B,IAAKgC,GACtB5D,EAAAV,EAAAW,cAAA,OAAKC,UAAU,aACXF,EAAAV,EAAAW,cAAA,gBACQ2D,EADR,SAEKxC,EAAKD,MAAMuM,yBAAyB9J,GAAOtB,MAAMqM,YAAY,GAFlE,OAGKvN,EAAKD,MAAMuM,yBAAyB9J,GAAOnB,KAAKkM,YAAY,GAHjE,OAIKvN,EAAKD,MAAMuM,yBAAyB9J,GAAOlB,MAAMiM,YAAY,GAJlE,OAKKvN,EAAKD,MAAMuM,yBAAyB9J,GAAOjB,IAAIgM,YAAY,GALhE,OAMKvN,EAAKD,MAAMuM,yBAAyB9J,GAAOhB,MAAM+L,YAAY,GANlE,MASJ3O,EAAAV,EAAAW,cAAA,OAAKC,UAAU,aACXF,EAAAV,EAAAW,cAACoO,EAAD,CACIxH,MAAO6H,EACPvC,aAAc,SAAAzK,GAAI,OAAIN,EAAKkN,yBAAyB5M,IACpDkL,aAAc,kBAAMxL,EAAKmN,kCAK7CvO,EAAAV,EAAAW,cAACgN,EAAD,CAAahB,IAAK/N,KAAKiD,MAAM4M,kBA1D1B,QA+DfzG,SAAA,SAAS5F,GACLxD,KAAKoP,YAAYhG,SAAS5F,GAC1B,IAAAkN,EAA6B1Q,KAAKmP,gBAAlCwB,EAAAC,MAAAC,QAAAH,GAAAI,EAAA,MAAAJ,EAAAC,EAAAD,IAAAK,OAAAC,cAAmD,KAAAlD,EAAA,GAAA6C,EAAA,IAAAG,GAAAJ,EAAAhQ,OAAA,MAAAoN,EAAA4C,EAAAI,SAAA,KAAAA,EAAAJ,EAAAO,QAAAC,KAAA,MAAApD,EAAAgD,EAAAK,MAAArD,EAChClB,eAEnB5M,KAAKoP,YAAY3C,SAASzM,KAAK0M,eAC/B,IAAA0E,EAA6BpR,KAAKmP,gBAAlCkC,EAAAT,MAAAC,QAAAO,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAL,OAAAC,cAAmD,KAAAO,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA1Q,OAAA,MAAA6Q,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAH,QAAAC,KAAA,MAAAK,EAAAD,EAAAH,MAAAI,EAChC9E,SAASzM,KAAK0M,eAEjC,GAA+C,IAA3C1M,KAAKoP,YAAYpD,SAASrD,MAAMjI,QAAgBV,KAAKiD,MAAMsM,WAAa,EAAG,CAC3EvP,KAAKoP,YAAYtC,WACjB,IAAA0E,EAA6BxR,KAAKmP,gBAAlCsC,EAAAb,MAAAC,QAAAW,GAAAE,EAAA,MAAAF,EAAAC,EAAAD,IAAAT,OAAAC,cAAmD,KAAAW,EAAA,GAAAF,EAAA,IAAAC,GAAAF,EAAA9Q,OAAA,MAAAiR,EAAAH,EAAAE,SAAA,KAAAA,EAAAF,EAAAP,QAAAC,KAAA,MAAAS,EAAAD,EAAAP,MAAAQ,EAChC7E,WAEnB9M,KAAK0M,cAAuC,SAAvB1M,KAAK0M,cAA2B,QAAU,OAC/D1M,KAAK8D,SAAS,CAAEyL,WAAYvP,KAAKiD,MAAMsM,WAAa,IAExDvP,KAAK4R,kBACL5R,KAAK6R,mBACL7R,KAAK8D,SAAS,CACV0L,yBAA0BxP,KAAKmP,gBAAgB7N,IAAI,SAAAwQ,GAAc,OAAIA,EAAejI,wBACpF6F,cAAe1P,KAAKmP,gBAAgB7N,IAAI,SAAAwQ,GAAc,OAAIA,EAAenL,aAIjFoG,yBAAA,SAAyBvJ,GACrBxD,KAAKoP,YAAYrC,yBAAyBvJ,GAC1CxD,KAAK4R,kBACL5R,KAAK6R,mBACL7R,KAAK+R,0BAGT5E,yBAAA,SAAyB3J,GACrBxD,KAAKoP,YAAYjC,yBAAyB3J,GAC1CxD,KAAK4R,kBACL5R,KAAK6R,mBACL7R,KAAK+R,0BAGTH,gBAAA,WAAkB,IAAA7N,EAAA/D,KACdA,KAAK8D,SAAS,CACVoF,KAAMlJ,KAAKoP,YAAYpD,SAASrD,MAAMrH,IAAI,SAAAkC,GACtC,OAAOO,EAAKmI,WAAW7C,aAAatF,EAAKqL,YAAYzI,MAAOnD,UAKxEqO,iBAAA,WACI7R,KAAK8D,SAAS,CACV6C,MAAO3G,KAAKoP,YAAYzI,WAIhCoL,qBAAA,WACI/R,KAAK8D,SAAS,CACVmI,UAAWjM,KAAKoP,YAAYnD,eAIpCsE,cAAA,WACIvQ,KAAK8D,SAAS,CACV8L,aAAc5P,KAAKiD,MAAM2M,iBAIjCM,mBAAA,SAAmB1M,GAAM,IAAAmL,EAAA3O,KACrB,OACI8B,EAAAV,EAAAW,cAACkN,EAAD,CACIvL,IAAKF,EAAKA,KAAKzC,KACf0B,QAAS,WACLkM,EAAKvF,SAAS5F,EAAKA,OAEvB5C,SAAU4C,EAAKA,KAAK5C,cAKhCwP,yBAAA,SAAyB5M,GACrBxD,KAAK8D,SAAS,CAAE+L,eAAgBrM,EAAK5C,cAGzCyP,yBAAA,WACIrQ,KAAK8D,SAAS,CAAE+L,eAAgB,WAhLIjN,IAAMC,sCCL7BmP,cACjB,SAAAA,EAAYzP,GAAO,IAAAF,EAAA,OACfA,EAAAU,EAAAC,KAAAhD,KAAMuC,IAANvC,MACKiD,MAAQ,CACTqM,UAAU,EACV2C,iBAAkB5P,EAAK6P,2BAA2B7P,EAAKE,MAAM4P,UAJlD9P,sCAQnByN,kBAAA,WACI9P,KAAK8D,SAAS,CACVwL,UAAU,OAIlBzN,OAAA,WAAS,IAAAqB,EAAAlD,KACL,OAAKA,KAAKiD,MAAMqM,SAIZxN,EAAAV,EAAAW,cAAAD,EAAAV,EAAA+B,SAAA,KACIrB,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOmQ,SACnBtQ,EAAAV,EAAAW,cAAA,MAAIC,UAAWC,IAAOgO,QAASjQ,KAAKuC,MAAM0N,QAC1CnO,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOoQ,MAClBrS,KAAKuC,MAAM4P,QAAQ7Q,IAAI,SAACgR,EAAK5M,GAAN,OACpB5D,EAAAV,EAAAW,cAAA,UACIC,UAAcC,IAAOsQ,UAAZ,KACLrP,EAAKD,MAAMgP,mBAAqBvM,EAAQzD,IAAOO,SAAW,IAE9DC,QAAS,kBAAMS,EAAKsP,WAAWF,EAAIG,QAAS/M,IAC5ChC,IAAKgC,GACJ4M,EAAI7S,UAKrBqC,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOkQ,SAClBnS,KAAKuC,MAAM4P,QAAQ7Q,IAAI,SAACgR,EAAK5M,GAAN,OACpB5D,EAAAV,EAAAW,cAAA,OACIC,UAAcC,IAAOyQ,WAAZ,KACLxP,EAAKD,MAAMgP,mBAAqBvM,EAAQzD,IAAOO,SAAW,IAE9DkB,IAAKgC,GACJ4M,EAAIH,aA1Bd,QAkCfD,2BAAA,SAA2BG,GACvB,IAAMM,EAAiC,oBAAXC,QAA0BA,OACtD,IAAKD,EACD,OAAO,EAEX,IAAME,EAAiBF,EAAaG,SAASC,KACvCrN,EAAQ2M,EAAK/F,UAAU,SAAAgG,GAAG,OAAIA,EAAIG,UAAYI,IACpD,OAAkB,IAAXnN,EAAeA,EAAQ,KAGlC8M,WAAA,SAAWC,EAAS/M,GAChB,IAAMiN,EAAiC,oBAAXC,QAA0BA,OAClDD,GACAA,EAAaK,QAAQC,kBAAaxK,OAAWA,EAAWgK,GAE5DzS,KAAK8D,SAAS,CACVmO,iBAAkBvM,QAnEI9C,IAAMC,WCGzB,SAASqQ,IACpB,IACMC,EAAQ,CACV,CAAE1T,KAAM,qBAAsB0S,QAASrQ,EAAAV,EAAAW,cAACqR,EAAD,MAAsBX,QAAS,UACtE,CAAEhT,KAAM,kBAAmB0S,QAASrQ,EAAAV,EAAAW,cAACsR,EAAD,MAAoBZ,QAAS,cAGrE,OACI3Q,EAAAV,EAAAW,cAACuR,EAAA,EAAD,CAAQC,UAPO,cAQXzR,EAAAV,EAAAW,cAACyR,EAAD,CAAMvD,OARK,aAQekC,QAASgB,KCZhC,SAASM,KACpB,OAAO3R,EAAAV,EAAAW,cAACmR,EAAD,MAJXQ,EAAAC,EAAAC,EAAA,4BAAAH,uCCAAC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAhT,IAAAsS,EAAAC,EAAAC,EAAA,sBAAAO,EAAA,aAAAT,EAAA,SAYMW,EAAqBzR,IAAM0R,cAAc,IAEzCT,EAAc,SAAAtR,GAAK,OACvBwR,EAAA3S,EAAAW,cAACsS,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEjS,EAAMkS,MACLD,EAAgBjS,EAAMmS,QAAUF,EAAgBjS,EAAMmS,OAAOD,MAEtDlS,EAAMV,QAAUU,EAAMoS,UAC5BpS,EAAMkS,KAAOlS,EAAMkS,KAAKA,KAAOD,EAAgBjS,EAAMmS,OAAOD,MAGvDV,EAAA3S,EAAAW,cAAA,uCA4Bf8R,EAAYe,UAAY,CACtBH,KAAMI,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxBnT,OAAQgT,IAAUI,KAClBN,SAAUE,IAAUI,2BCzDtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWhU,EAAQ,OALRgU,EAAEG,SAAYH,oLCMzCI,EAAmB,SAAAxH,GAAkB,IAAfgF,EAAehF,EAAfgF,SACpByC,EAAgBC,UAAOC,4BAA4B3C,EAAS4C,UAClE,OAAO9S,IAAMb,cAAc4T,IAApB/W,OAAAgX,OAAA,CACL9C,WACAyC,iBACGA,EAAcM,QAIrBP,EAAiBV,UAAY,CAC3B9B,SAAU+B,IAAUiB,MAAM,CACxBJ,SAAUb,IAAUE,OAAOC,aAC1BA,YAGUM,qkDCjBA,SAASS,IACpB,OACIjU,EAAAV,EAAAW,cAACiU,EAAA,EAAD,CACItB,MAAK,aAWL7S,OAAQ,SAAA4S,GAAI,OAAI3S,EAAAV,EAAAW,cAACkU,EAAA7U,EAAD,CAAK8U,MAAOzB,EAAK0B,iBAAiBC,gBAAgBF,SAZtEzB,KAAA4B,0BCDO,SAASC,EAATxI,GAA+B,IAAbyI,EAAazI,EAAbyI,UAC7B,OACIzU,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOgO,QACnBnO,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOC,WACnBJ,EAAAV,EAAAW,cAACiU,EAAA,EAAD,CAAMQ,GAAG,IAAIxU,UAAWC,IAAOwU,UAC3B3U,EAAAV,EAAAW,cAAA,OAAKC,UAAWC,IAAOyU,YACnB5U,EAAAV,EAAAW,cAACgU,EAAD,OAEJjU,EAAAV,EAAAW,cAAA,UAAKwU,aCPV,SAASI,EAAT7I,GAAyC,IAAvByF,EAAuBzF,EAAvByF,UAAWoB,EAAY7G,EAAZ6G,SACxC,OACI7S,EAAAV,EAAAW,cAACiU,EAAA,EAAD,CACItB,MAAK,aASL7S,OAAQ,SAAA4S,GAAI,OACR3S,EAAAV,EAAAW,cAAAD,EAAAV,EAAA+B,SAAA,KACIrB,EAAAV,EAAAW,cAAC6U,EAAAxV,EAAD,CAAQyV,MAAOtD,EAAeA,EAAN,mBAAoC,iBACxDzR,EAAAV,EAAAW,cAAA,QAAM+U,KAAK,OACXhV,EAAAV,EAAAW,cAAA,QAAMgV,KAAK,iDAAiDC,IAAI,gBAEpElV,EAAAV,EAAAW,cAACuU,EAAD,CAAQC,UAAW9B,EAAKwC,KAAKC,aAAaL,QAC1C/U,EAAAV,EAAAW,cAAA,OAAKC,UAAU,yBAAyB2S,KAjBpDF,KAAA0C","file":"component---src-pages-terra-js-9534009e9ef66330e96f.js","sourcesContent":["import { withPrefix } from 'gatsby'\r\nimport uuid from \"uuid\";\r\n\r\nexport const COLOR = Object.freeze({\r\n    WHITE: \"W\",\r\n    BLUE: \"U\",\r\n    BLACK: \"B\",\r\n    RED: \"R\",\r\n    GREEN: \"G\"\r\n});\r\n\r\nexport const RARITY = Object.freeze({\r\n    MYTHIC: \"M\",\r\n    RARE: \"R\",\r\n    UNCOMMON: \"U\",\r\n    COMMON: \"C\"\r\n});\r\n\r\nexport default class Card {\r\n    constructor(id, name, color, castingCost, imageName, rarity, notes, rulesText) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.color = color;\r\n        this.cmc = getCmc(castingCost);\r\n        this.imageUrl = withPrefix(`/card-images/${imageName}.png`);\r\n        this.rarity = rarity;\r\n        this.notes = notes;\r\n        this.rulesText = rulesText;\r\n    }\r\n\r\n    assignUuid() {\r\n        this.uuid = uuid.v4();\r\n        return this;\r\n    }\r\n}\r\n\r\nfunction getCmc(castingCost) {\r\n    if (castingCost.indexOf(\"X\") !== -1) {\r\n        return \"X\";\r\n    }\r\n    const generic = isNaN(parseInt(castingCost, 10)) ? 0 : parseInt(castingCost, 10);\r\n    const genericAsString = generic === 0 ? \"\" : generic.toString();\r\n    const colored = castingCost.slice(genericAsString.length).length;\r\n    return generic + colored;\r\n}\r\n","import Card from \"./card\";\r\n\r\nconst jsonCardList = require(\"./cardList.json\");\r\n\r\nconst sortedJsonCardList = jsonCardList.sort((a, b) => a.id - b.id);\r\n\r\nexport default sortedJsonCardList.map(jsonCard => {\r\n    return new Card(\r\n        jsonCard.id,\r\n        jsonCard.name,\r\n        jsonCard.color,\r\n        jsonCard.castingCost,\r\n        jsonCard.imageName,\r\n        jsonCard.rarity,\r\n        jsonCard.notes,\r\n        jsonCard.rulesText\r\n    );\r\n});\r\n","import React from \"react\";\r\nimport styles from \"./filterButtons.module.scss\";\r\n\r\nexport const FILTER = Object.freeze({\r\n    NONE: \"\",\r\n    WHITE: \"W\",\r\n    BLUE: \"U\",\r\n    BLACK: \"B\",\r\n    RED: \"R\",\r\n    GREEN: \"G\",\r\n    GOLD: \"X\",\r\n    COLORLESS: \"C\"\r\n});\r\n\r\nexport default class FilterButtons extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.container}>\r\n                {this.getButton(FILTER.WHITE, \"White\")}\r\n                {this.getButton(FILTER.BLUE, \"Blue\")}\r\n                {this.getButton(FILTER.BLACK, \"Black\")}\r\n                {this.getButton(FILTER.RED, \"Red\")}\r\n                {this.getButton(FILTER.GREEN, \"Green\")}\r\n                {this.getButton(FILTER.GOLD, \"Gold\")}\r\n                {this.getButton(FILTER.COLORLESS, \"Colorless\")}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getButton(filter, name) {\r\n        return (\r\n            <button\r\n                className={`${styles.button} ${this.props.filter === filter ? styles.selected : \"\"}`}\r\n                onClick={() => this.handleClick(filter)}>\r\n                {name}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    handleClick(filter) {\r\n        this.props.onFilterChange(this.props.filter === filter ? FILTER.NONE : filter);\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport cardList from \"../cardList\";\r\nimport { COLOR } from \"../card\";\r\nimport FilterButtons, { FILTER } from \"./filterButtons\";\r\nimport styles from \"./cardImageGallery.module.scss\";\r\n\r\nexport default class CardImageGallery extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            filter: FILTER.WHITE\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <FilterButtons filter={this.state.filter} onFilterChange={filter => this.changeFilter(filter)} />\r\n                <div className={styles.cardImagesContainer}>\r\n                    {this.getFilteredCards().map(card => (\r\n                        <div className={styles.cardContainer} key={card.id}>\r\n                            <img src={card.imageUrl} className={styles.card} alt={card.name} />\r\n                            <div className={styles.cardName}>{card.name}</div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <FilterButtons filter={this.state.filter} onFilterChange={filter => this.changeFilter(filter)} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    changeFilter(filter) {\r\n        this.setState({\r\n            filter: filter\r\n        });\r\n    }\r\n\r\n    getFilteredCards() {\r\n        return cardList.filter(card => {\r\n            switch (this.state.filter) {\r\n                case FILTER.NONE:\r\n                    return true;\r\n                case FILTER.GOLD:\r\n                    return card.color.length > 1;\r\n                case FILTER.COLORLESS:\r\n                    return card.color.length === 0;\r\n                case FILTER.WHITE:\r\n                    return card.color === COLOR.WHITE;\r\n                case FILTER.BLUE:\r\n                return card.color === COLOR.BLUE;\r\n                case FILTER.BLACK:\r\n                return card.color === COLOR.BLACK;\r\n                case FILTER.RED:\r\n                return card.color === COLOR.RED;\r\n                case FILTER.GREEN:\r\n                return card.color === COLOR.GREEN;\r\n                default:\r\n                    return true;\r\n            }\r\n        });\r\n    }\r\n}\r\n","export default class ColorAnalyser {\r\n\r\n    constructor(existingPickRatings, potentialPickRating) {\r\n\r\n        this.white = Math.random() * 0.1;\r\n        this.blue = Math.random() * 0.1;\r\n        this.black = Math.random() * 0.1;\r\n        this.red = Math.random() * 0.1;\r\n        this.green = Math.random() * 0.1;\r\n\r\n        this.totalPicks = existingPickRatings.length;\r\n        this.countRatings(existingPickRatings);\r\n        if (potentialPickRating) {\r\n            this.countRating(potentialPickRating);\r\n        }\r\n        this.generateFuzz();\r\n    }\r\n\r\n    getModifier(cardColors) {\r\n        if (cardColors === \"\") return Math.max(...this.getModifierArray(\"WUBRG\"));\r\n        return Math.min(...this.getModifierArray(cardColors));\r\n    }\r\n\r\n    countRatings(ratings) {\r\n        ratings.forEach(rating => this.countRating(rating));\r\n    }\r\n\r\n    countRating(rating) {\r\n        if (rating.card.color.indexOf(\"W\") !== -1) this.white += rating.rating;\r\n        if (rating.card.color.indexOf(\"U\") !== -1) this.blue += rating.rating;\r\n        if (rating.card.color.indexOf(\"B\") !== -1) this.black += rating.rating;\r\n        if (rating.card.color.indexOf(\"R\") !== -1) this.red += rating.rating;\r\n        if (rating.card.color.indexOf(\"G\") !== -1) this.green += rating.rating;\r\n    }\r\n\r\n    generateFuzz() {\r\n        const unorderedColoredCounts = [\r\n            new ColorCount(\"white\", this.white),\r\n            new ColorCount(\"blue\", this.blue),\r\n            new ColorCount(\"black\", this.black),\r\n            new ColorCount(\"red\", this.red),\r\n            new ColorCount(\"green\", this.green)\r\n        ];\r\n        const orderedColoredCounts = unorderedColoredCounts.sort((a, b) => a.rating - b.rating);\r\n        orderedColoredCounts.forEach((colorCount, index) => {\r\n            this[colorCount.name + \"Fuzz\"] = this.getColorFuzz(index);\r\n        });\r\n    }\r\n\r\n    get fuzzedWhite() {\r\n        return this.white + this.whiteFuzz;\r\n    }\r\n    get fuzzedBlue() {\r\n        return this.blue + this.blueFuzz;\r\n    }\r\n    get fuzzedBlack() {\r\n        return this.black + this.blackFuzz;\r\n    }\r\n    get fuzzedRed() {\r\n        return this.red + this.redFuzz;\r\n    }\r\n    get fuzzedGreen() {\r\n        return this.green + this.greenFuzz;\r\n    }\r\n\r\n    getColorFuzz(rankByLowest) {\r\n        switch (rankByLowest) {\r\n            case 0:\r\n                return Math.max(0, Math.min(45, 72 - this.totalPicks * 9));\r\n            case 1:\r\n                return Math.max(0, Math.min(45, 126 - this.totalPicks * 9));\r\n            case 2:\r\n                return Math.max(0, Math.min(45, 216 - this.totalPicks * 12));\r\n            default:\r\n                return Math.max(this.totalPicks * 8 - 67, 45);\r\n        }\r\n    }\r\n\r\n    getModifierArray(cardColors) {\r\n        const colorArray = cardColors.split(\"\");\r\n        return colorArray.map(color => this.getModifierForSingleColor(color));\r\n    }\r\n\r\n    getModifierForSingleColor(color) {\r\n        if (color === \"W\") return this.fuzzedWhite / this.getTotalFuzzyCount();\r\n        if (color === \"U\") return this.fuzzedBlue / this.getTotalFuzzyCount();\r\n        if (color === \"B\") return this.fuzzedBlack / this.getTotalFuzzyCount();\r\n        if (color === \"R\") return this.fuzzedRed / this.getTotalFuzzyCount();\r\n        return this.fuzzedGreen / this.getTotalFuzzyCount();\r\n    }\r\n\r\n    getTotalFuzzyCount() {\r\n        return this.fuzzedWhite + this.fuzzedBlue + this.fuzzedBlack + this.fuzzedRed + this.fuzzedGreen;\r\n    }\r\n}\r\n\r\nclass ColorCount {\r\n    constructor(name, rating) {\r\n        this.name = name;\r\n        this.rating = rating;\r\n    }\r\n}\r\n","export default class SynergyAnalyser {\r\n    constructor(picks, pick) {\r\n        this.artifact = 0;\r\n        this.etb = 0;\r\n        this.lifegain = 0;\r\n        this.lifeloss = 0;\r\n        this.equipment = 0;\r\n        this.creatureTokens = 0;\r\n        this.fodder = 0;\r\n        this.creatureFodder = 0;\r\n        this.artifactFodder = 0;\r\n        this.police = 0;\r\n        this.evasion = 0;\r\n        this.flash = 0;\r\n        this.cheating = 0;\r\n        this.scry = 0;\r\n        this.combatTrick = 0;\r\n        this.mutantXeno = 0;\r\n\r\n        this.totalPicks = picks.length;\r\n        this.countCards(picks);\r\n        if (pick) {\r\n            this.countCard(pick);\r\n        }\r\n    }\r\n\r\n    getPotentialPowerOfCard(card) {\r\n        if (!card.notes.potential) return card.notes.power;\r\n        const fractionOfPotential = this.getFractionOfPotential(card);\r\n        return (\r\n            card.notes.power +\r\n            (card.notes.potential - card.notes.power) *\r\n                (fractionOfPotential + (1 - fractionOfPotential) * this.getOptimism())\r\n        );\r\n    }\r\n\r\n    getExistingPowerOfCard(card) {\r\n        if (!card.notes.potential) return card.notes.power;\r\n        return card.notes.power + (card.notes.potential - card.notes.power) * this.getFractionOfPotential(card);\r\n    }\r\n\r\n    getFractionOfPotential(card) {\r\n        let fractionOfPotentialFulfilled = 0;\r\n\r\n        for (const prop in card.notes.synergies) {\r\n            if (this[prop] === undefined) {\r\n                throw new Error(`Missing card tag: ${prop}`);\r\n            }\r\n            fractionOfPotentialFulfilled += this[prop] / card.notes.synergies[prop];\r\n        }\r\n        return Math.max(1, fractionOfPotentialFulfilled);\r\n    }\r\n\r\n    countCards(cards) {\r\n        cards.forEach(card => this.countCard(card));\r\n    }\r\n\r\n    countCard(card) {\r\n        for (const prop in card.notes.tags) {\r\n            if (this[prop] === undefined) {\r\n                throw new Error(`Missing card tag: ${prop}`);\r\n            }\r\n            this[prop] += card.notes.tags[prop];\r\n        }\r\n    }\r\n\r\n    getOptimism() {\r\n        return Math.max(0, Math.min(1.0, 1.6 - this.totalPicks * 0.2));\r\n    }\r\n}\r\n","export default class CardRating {\r\n    constructor(card, rating) {\r\n        this.card = card;\r\n        this.rating = rating;\r\n    }\r\n}\r\n","import ColorAnalyser from \"./colorAnalyser\";\r\nimport SynergyAnalyser from \"./synergyAnalyser\";\r\nimport CardRating from \"./cardRating\";\r\n\r\nexport class ColorPreferences {\r\n    constructor(colorAnalyser) {\r\n        this.white = colorAnalyser.getModifier(\"W\");\r\n        this.blue = colorAnalyser.getModifier(\"U\");\r\n        this.black = colorAnalyser.getModifier(\"B\");\r\n        this.red = colorAnalyser.getModifier(\"R\");\r\n        this.green = colorAnalyser.getModifier(\"G\");\r\n    }\r\n}\r\n\r\nexport default class CardPicker {\r\n    decidePick(pack, picks) {\r\n        if (!pack || pack.cards.length === 0)\r\n            throw new Error(\"Sorry Dave, I can't let you pick from a nonexistent or empty pack.\");\r\n        this.picks = picks;\r\n        this.evaluatePack(picks, pack);\r\n        return this.makePick();\r\n    }\r\n\r\n    evaluateCard(picks, card) {\r\n        const synergyAnalyser = new SynergyAnalyser(picks, card);\r\n        const uncoloredPickRatings = picks.map(\r\n            pick => new CardRating(pick, synergyAnalyser.getExistingPowerOfCard(pick))\r\n        );\r\n        const uncoloredCardRating = new CardRating(card, synergyAnalyser.getPotentialPowerOfCard(card));\r\n        const colorAnalyser = new ColorAnalyser(uncoloredPickRatings, uncoloredCardRating);\r\n        const coloredPickRatings = uncoloredPickRatings.map(\r\n            pickRating => pickRating.rating * colorAnalyser.getModifier(pickRating.card.color)\r\n        );\r\n        const aggregateColoredPickRatings = coloredPickRatings.reduce((a, b) => a + b, 0);\r\n        const coloredCardRating = uncoloredCardRating.rating * colorAnalyser.getModifier(card.color);\r\n        return new CardRating(card, aggregateColoredPickRatings + coloredCardRating);\r\n    }\r\n\r\n    getColorPreferences(picks) {\r\n        const synergyAnalyser = new SynergyAnalyser(picks);\r\n        const uncoloredPickRatings = picks.map(\r\n            pick => new CardRating(pick, synergyAnalyser.getExistingPowerOfCard(pick))\r\n        );\r\n        const colorAnalyser = new ColorAnalyser(uncoloredPickRatings);\r\n        return new ColorPreferences(colorAnalyser);\r\n    }\r\n\r\n    evaluatePack(picks, pack) {\r\n        this.packRatings = pack.cards.map(card => this.evaluateCard(picks, card));\r\n    }\r\n\r\n    makePick() {\r\n        return this.packRatings.reduce((accumulator, currentValue) => {\r\n            if (currentValue.rating >= accumulator.rating) return currentValue;\r\n            return accumulator;\r\n        }).card;\r\n    }\r\n}\r\n","import cardList from \"../cardList\";\r\nimport { random, cloneDeep, sample, shuffle } from \"lodash\";\r\n\r\nconst mythics = cardList.filter(card => card.rarity === \"M\");\r\nconst rares = cardList.filter(card => card.rarity === \"R\");\r\nconst uncommons = cardList.filter(card => card.rarity === \"U\");\r\nconst commons = cardList.filter(card => card.rarity === \"C\");\r\n\r\nexport default function generatePack() {\r\n    const cards = [];\r\n    if (random(0, 7) === 0) {\r\n        cards.push(cloneDeep(sample(mythics)).assignUuid());\r\n    } else {\r\n        cards.push(cloneDeep(sample(rares)).assignUuid());\r\n    }\r\n    cards.push(...generateUncommons());\r\n    cards.push(...generateCommons());\r\n    return cards;\r\n}\r\n\r\nfunction generateUncommons() {\r\n    const cards = [];\r\n    for (let i = 0; i < 3; i++) {\r\n        const bannedCardColors = cards.map(card => card.color);\r\n        const otherColorUncommons = uncommons.filter(\r\n            uncommon => !bannedCardColors.some(cardColor => cardColor === uncommon.color)\r\n        );\r\n        cards.push(cloneDeep(sample(otherColorUncommons)).assignUuid());\r\n    }\r\n    return cards;\r\n}\r\n\r\nfunction generateCommons() {\r\n    const cards = [];\r\n    const singleColors = [\"W\", \"U\", \"B\", \"R\", \"G\"];\r\n    singleColors.forEach(singleColor => cards.push(generateCommonOfColor(singleColor)));\r\n    for (let i = 0; i < 5; i++) {\r\n        const bannedCardColors = [];\r\n        const existingCardColors = cards.map(card => card.color);\r\n        existingCardColors.forEach(color => {\r\n            if (\r\n                existingCardColors.filter(existingColor => existingColor === color).length >= 3 &&\r\n                !bannedCardColors.some(bannedColor => bannedColor === color)\r\n            ) {\r\n                bannedCardColors.push(color);\r\n            }\r\n        });\r\n        const otherColorCommons = commons.filter(\r\n            common => !bannedCardColors.some(cardColor => cardColor === common.color)\r\n        );\r\n        const nonRepeatedCommons = otherColorCommons.filter(common => !cards.some(card => card.id === common.id));\r\n        cards.push(cloneDeep(sample(nonRepeatedCommons)).assignUuid());\r\n    }\r\n    return shuffle(cards);\r\n}\r\n\r\nfunction generateCommonOfColor(singleColor) {\r\n    const coloredCommons = commons.filter(common => common.color === singleColor);\r\n    return cloneDeep(coloredCommons[random(0, coloredCommons.length - 1)]).assignUuid();\r\n}\r\n","import generatePack from \"./generatePack\";\r\n\r\nexport default class Pack {\r\n    constructor() {\r\n        this.cards = generatePack();\r\n    }\r\n}\r\n","import Pack from \"./pack\";\r\nimport CardPicker from \"./cardPicker\";\r\nimport { findIndex, remove, pullAt } from \"lodash\";\r\n\r\nexport default class Player {\r\n    constructor(leftHandPlayer) {\r\n        this.nextPack = new Pack();\r\n        this.pack = null;\r\n        this.picks = [];\r\n        this.sideboard = [];\r\n        this.cardPicker = new CardPicker();\r\n        this.leftHandPlayer = null;\r\n        this.rightHandPlayer = null;\r\n        if (leftHandPlayer) {\r\n            this.leftHandPlayer = leftHandPlayer;\r\n            this.leftHandPlayer.setRightHandPlayer(this);\r\n        }\r\n    }\r\n\r\n    makePick(card) {\r\n        if (!this.nextPack || this.nextPack.cards.length === 0) {\r\n            throw new Error(\"No next pack?!?!\");\r\n        }\r\n        this.pack = this.nextPack;\r\n        this.nextPack = null;\r\n        const cardIndex = findIndex(this.pack.cards, cardInPack => cardInPack.id === card.id);\r\n        if (cardIndex === -1) {\r\n            throw new Error(`You tried to pick ${card.name} that's not in the pack. Cheater.`);\r\n        }\r\n        const pick = pullAt(this.pack.cards, cardIndex)[0];\r\n        this.picks.push(pick);\r\n    }\r\n\r\n    passPack(passDirection) {\r\n        if (passDirection === \"left\") {\r\n            this.leftHandPlayer.receivePack(this.pack);\r\n        } else {\r\n            this.rightHandPlayer.receivePack(this.pack);\r\n        }\r\n    }\r\n\r\n    computerPick() {\r\n        const pick = this.cardPicker.decidePick(this.nextPack, this.picks);\r\n        this.makePick(pick);\r\n        this.sideboardUnwantedCards();\r\n    }\r\n\r\n    openPack() {\r\n        this.nextPack = new Pack();\r\n    }\r\n\r\n    getColorPreferences() {\r\n        return this.cardPicker.getColorPreferences(this.picks);\r\n    }\r\n\r\n    moveFromPicksToSideboard(card) {\r\n        const removedCard = remove(this.picks, pick => pick === card);\r\n        this.sideboard.push(...removedCard);\r\n    }\r\n\r\n    moveFromSideboardToPicks(card) {\r\n        const removedCard = remove(this.sideboard, pick => pick === card);\r\n        this.picks.push(...removedCard);\r\n    }\r\n\r\n    setLeftHandPlayer(leftHandPlayer) {\r\n        this.leftHandPlayer = leftHandPlayer;\r\n        if (!leftHandPlayer.rightHandPlayer) {\r\n            leftHandPlayer.setRightHandPlayer(this);\r\n        }\r\n    }\r\n\r\n    setRightHandPlayer(rightHandPlayer) {\r\n        this.rightHandPlayer = rightHandPlayer;\r\n        if (!rightHandPlayer.leftHandPlayer) {\r\n            rightHandPlayer.setLeftHandPlayer(this);\r\n        }\r\n    }\r\n\r\n    receivePack(pack) {\r\n        this.nextPack = pack;\r\n    }\r\n\r\n    sideboardUnwantedCards() {\r\n        const colorPreferences = this.getColorPreferences();\r\n        const removedCards = remove(this.picks, pick => {\r\n            const colorsOfCard = pick.color.split(\"\");\r\n            return colorsOfCard.some(color => {\r\n                if (color === \"W\") return colorPreferences.white < 0.1;\r\n                if (color === \"U\") return colorPreferences.blue < 0.1;\r\n                if (color === \"B\") return colorPreferences.black < 0.1;\r\n                if (color === \"R\") return colorPreferences.red < 0.1;\r\n                if (color === \"G\") return colorPreferences.green < 0.1;\r\n                return false;\r\n            });\r\n        });\r\n        this.sideboard.push(...removedCards);\r\n    }\r\n\r\n    static createTableOfPlayers() {\r\n        const numOfPlayers = 8;\r\n        const players = [];\r\n        for (let i = 0; i < numOfPlayers; i++) {\r\n            const newPlayer = i === 0 ? new Player() : new Player(players[i - 1]);\r\n            players.push(newPlayer);\r\n        }\r\n        players[0].setLeftHandPlayer(players[numOfPlayers - 1]);\r\n        return players;\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./cardImage.module.scss\";\r\n\r\nexport default function CardImage({ url, additionalClasses, onMouseEnter, name }) {\r\n    return (\r\n        <img\r\n            src={url}\r\n            className={`${styles.card}${(additionalClasses && \" \" + additionalClasses) || \"\"}`}\r\n            onMouseEnter={() => {\r\n                if (onMouseEnter) onMouseEnter();\r\n            }}\r\n            alt={name}\r\n        />\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CardImage from \"./cardImage\";\r\nimport styles from \"./cardPiles.module.scss\";\r\n\r\nexport default class CardPiles extends React.Component {\r\n    render() {\r\n        const piles = this.pilify(this.props.cards);\r\n        const sizeOfLargestPile = Math.max(...piles.map(pile => pile.length));\r\n        return (\r\n            <div className={`${styles.cardPiles} ${styles[\"sizeOfLargestPile\" + sizeOfLargestPile]}`}>\r\n                {piles.map((pile, index) => this.getPileElement(pile, index))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getPileElement(pile, index) {\r\n        return (\r\n            <div className={styles.pile} key={index}>\r\n                {pile.map((card, index) => this.getPileCardImageElement(card, index))}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getPileCardImageElement(card, index) {\r\n        return (\r\n            <div\r\n                onClick={() => {\r\n                    if (this.props.onClick) this.props.onClick(card);\r\n                }}\r\n                onMouseEnter={() => {\r\n                    if (this.props.onMouseEnter) this.props.onMouseEnter(card);\r\n                }}\r\n                onMouseLeave={() => {\r\n                    if (this.props.onMouseLeave) this.props.onMouseLeave();\r\n                }}\r\n                key={index}\r\n            >\r\n                <CardImage key={card.uuid} url={card.imageUrl} additionalClasses={styles.card + \" \" + styles[\"pileIndex\" + index]} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    pilify(cards) {\r\n        const alphetisedCards = cards.sort((a, b) => {\r\n            if (a < b) return -1;\r\n            if (a > b) return 1;\r\n            return 0;\r\n        });\r\n        return this.splitIntoCmcPiles(alphetisedCards).map(pile => this.sortByColor(pile));\r\n    }\r\n\r\n    splitIntoCmcPiles(cards) {\r\n        const piles = [[], [], [], [], [], [], [], []];\r\n        cards.forEach(card => {\r\n            if (card.cmc === \"X\" || card.cmc === 0) piles[7].push(card);\r\n            else if (card.cmc >= 7) piles[6].push(card);\r\n            else piles[card.cmc - 1].push(card);\r\n        });\r\n        return piles;\r\n    }\r\n\r\n    sortByColor(cards) {\r\n        return cards.sort((a, b) => {\r\n            const wubrg = \"WUBRG\";\r\n            let A, B;\r\n\r\n            if (a.color.length === 0) A = 5;\r\n            else if (a.color.length > 1) A = 6;\r\n            else A = wubrg.indexOf(a.color);\r\n\r\n            if (b.color.length === 0) B = 5;\r\n            else if (b.color.length > 1) B = 6;\r\n            else B = wubrg.indexOf(b.color);\r\n\r\n            return A - B;\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport CardImage from \"./cardImage\";\r\nimport styles from \"./cardPreview.module.scss\";\r\n\r\nexport default function CardPreview({ url }) {\r\n    return <div className={styles.cardPreview}>{url && <CardImage url={url} />}</div>;\r\n}\r\n","import React from \"react\";\r\nimport CardImage from \"./cardImage\";\r\n\r\nexport default function CardPick({ onClick, imageUrl }) {\r\n    return (\r\n        <div onClick={onClick}>\r\n            <CardImage url={imageUrl} />\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport CardPicker from \"./cardPicker\";\r\nimport Player from \"./player\";\r\nimport CardPiles from \"./cardPiles\";\r\nimport CardPreview from \"./cardPreview\";\r\nimport CardPick from \"./cardPick\";\r\nimport styles from \"./draftSimulator.module.scss\";\r\n\r\nexport default class DraftSimulator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.cardPicker = new CardPicker();\r\n        this.computerPlayers = Player.createTableOfPlayers();\r\n        this.humanPlayer = this.computerPlayers.shift();\r\n        this.state = {\r\n            isClient: false,\r\n            pack: this.humanPlayer.nextPack.cards.map(card => {\r\n                return this.cardPicker.evaluateCard(this.humanPlayer.picks, card);\r\n            }),\r\n            packNumber: 1,\r\n            picks: [],\r\n            sideboard: [],\r\n            computerColorPreferences: this.computerPlayers.map(player => player.getColorPreferences()),\r\n            computerPicks: [[], [], [], [], [], [], []],\r\n            showAIRatings: false,\r\n            showAIPicks: false,\r\n            hoveredCardUrl: null\r\n        };\r\n        this.passDirection = \"left\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isClient: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isClient) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className={styles.draftSim}>\r\n                {this.state.pack.length > 0 && (\r\n                    <div className={styles.boosterPack}>\r\n                        <h3 className={styles.header}>\r\n                            Pack {this.state.packNumber} Pick {15 - this.state.pack.length}{\" \"}\r\n                            <small>Click a card to add it to your deck</small>\r\n                        </h3>\r\n                        <div className={styles.cards}>{this.state.pack.map(card => this.getCardPickElement(card))}</div>\r\n                    </div>\r\n                )}\r\n                <h3 className={styles.header}>\r\n                    Deck ({this.state.picks.length}) <small>Click a card to move it to your sideboard</small>\r\n                </h3>\r\n                <CardPiles\r\n                    cards={this.state.picks}\r\n                    onClick={card => this.moveFromPicksToSideboard(card)}\r\n                    onMouseEnter={card => this.handleMouseEnterPileCard(card)}\r\n                    onMouseLeave={() => this.handleMouseLeavePileCard()}\r\n                />\r\n                <h3 className={styles.header}>\r\n                    Sideboard ({this.state.sideboard.length}) <small>Click a card to move it to your deck</small>\r\n                </h3>\r\n                <CardPiles\r\n                    cards={this.state.sideboard}\r\n                    onClick={card => this.moveFromSideboardToPicks(card)}\r\n                    onMouseEnter={card => this.handleMouseEnterPileCard(card)}\r\n                    onMouseLeave={() => this.handleMouseLeavePileCard()}\r\n                />\r\n                <div className={styles.toggleAiPicksButtonContainer}>\r\n                    <button onClick={() => this.toggleAIPicks()} className={styles.button}>\r\n                        {this.state.showAIPicks ? \"Hide AI Picks\" : \"Show AI Picks\"}\r\n                    </button>\r\n                </div>\r\n                {this.state.showAIPicks &&\r\n                    this.state.computerPicks.map((aiPicks, index) => (\r\n                        <div className=\"row\" key={index}>\r\n                            <div className=\"col-md-12\">\r\n                                <h3>\r\n                                    AI {index}&nbsp;—&nbsp; W:\r\n                                    {this.state.computerColorPreferences[index].white.toPrecision(3)}&nbsp; U:\r\n                                    {this.state.computerColorPreferences[index].blue.toPrecision(3)}&nbsp; B:\r\n                                    {this.state.computerColorPreferences[index].black.toPrecision(3)}&nbsp; R:\r\n                                    {this.state.computerColorPreferences[index].red.toPrecision(3)}&nbsp; G:\r\n                                    {this.state.computerColorPreferences[index].green.toPrecision(3)}&nbsp;\r\n                                </h3>\r\n                            </div>\r\n                            <div className=\"col-md-12\">\r\n                                <CardPiles\r\n                                    cards={aiPicks}\r\n                                    onMouseEnter={card => this.handleMouseEnterPileCard(card)}\r\n                                    onMouseLeave={() => this.handleMouseLeavePileCard()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <CardPreview url={this.state.hoveredCardUrl} />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    makePick(card) {\r\n        this.humanPlayer.makePick(card);\r\n        for (const computerPlayer of this.computerPlayers) {\r\n            computerPlayer.computerPick();\r\n        }\r\n        this.humanPlayer.passPack(this.passDirection);\r\n        for (const computerPlayer of this.computerPlayers) {\r\n            computerPlayer.passPack(this.passDirection);\r\n        }\r\n        if (this.humanPlayer.nextPack.cards.length === 0 && this.state.packNumber < 3) {\r\n            this.humanPlayer.openPack();\r\n            for (const computerPlayer of this.computerPlayers) {\r\n                computerPlayer.openPack();\r\n            }\r\n            this.passDirection = this.passDirection === \"left\" ? \"right\" : \"left\";\r\n            this.setState({ packNumber: this.state.packNumber + 1 });\r\n        }\r\n        this.updatePackState();\r\n        this.updatePicksState();\r\n        this.setState({\r\n            computerColorPreferences: this.computerPlayers.map(computerPlayer => computerPlayer.getColorPreferences()),\r\n            computerPicks: this.computerPlayers.map(computerPlayer => computerPlayer.picks)\r\n        });\r\n    }\r\n\r\n    moveFromPicksToSideboard(card) {\r\n        this.humanPlayer.moveFromPicksToSideboard(card);\r\n        this.updatePackState();\r\n        this.updatePicksState();\r\n        this.updateSideboardState();\r\n    }\r\n\r\n    moveFromSideboardToPicks(card) {\r\n        this.humanPlayer.moveFromSideboardToPicks(card);\r\n        this.updatePackState();\r\n        this.updatePicksState();\r\n        this.updateSideboardState();\r\n    }\r\n\r\n    updatePackState() {\r\n        this.setState({\r\n            pack: this.humanPlayer.nextPack.cards.map(card => {\r\n                return this.cardPicker.evaluateCard(this.humanPlayer.picks, card);\r\n            })\r\n        });\r\n    }\r\n\r\n    updatePicksState() {\r\n        this.setState({\r\n            picks: this.humanPlayer.picks\r\n        });\r\n    }\r\n\r\n    updateSideboardState() {\r\n        this.setState({\r\n            sideboard: this.humanPlayer.sideboard\r\n        });\r\n    }\r\n\r\n    toggleAIPicks() {\r\n        this.setState({\r\n            showAIPicks: !this.state.showAIPicks\r\n        });\r\n    }\r\n\r\n    getCardPickElement(card) {\r\n        return (\r\n            <CardPick\r\n                key={card.card.uuid}\r\n                onClick={() => {\r\n                    this.makePick(card.card);\r\n                }}\r\n                imageUrl={card.card.imageUrl}\r\n            />\r\n        );\r\n    }\r\n\r\n    handleMouseEnterPileCard(card) {\r\n        this.setState({ hoveredCardUrl: card.imageUrl });\r\n    }\r\n\r\n    handleMouseLeavePileCard() {\r\n        this.setState({ hoveredCardUrl: null });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./tabs.module.scss\";\r\n\r\nexport default class Tabs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isClient: false,\r\n            selectedTabIndex: this.getDefaultSelectedTabIndex(this.props.content)\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isClient: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.isClient) {\r\n            return null;\r\n        }\r\n        return (\r\n            <>\r\n                <div className={styles.tabsBar}>\r\n                    <h2 className={styles.header}>{this.props.header}</h2>\r\n                    <div className={styles.tabs}>\r\n                        {this.props.content.map((tab, index) => (\r\n                            <button\r\n                                className={`${styles.tabButton} ${\r\n                                    this.state.selectedTabIndex === index ? styles.selected : \"\"\r\n                                }`}\r\n                                onClick={() => this.onTabClick(tab.urlHash, index)}\r\n                                key={index}>\r\n                                {tab.name}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.content}>\r\n                    {this.props.content.map((tab, index) => (\r\n                        <div\r\n                            className={`${styles.tabContent} ${\r\n                                this.state.selectedTabIndex === index ? styles.selected : \"\"\r\n                            }`}\r\n                            key={index}>\r\n                            {tab.content}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n    getDefaultSelectedTabIndex(tabs) {\r\n        const windowGlobal = typeof window !== \"undefined\" && window;\r\n        if (!windowGlobal) {\r\n            return 0;\r\n        }\r\n        const currentUrlHash = windowGlobal.location.hash;\r\n        const index = tabs.findIndex(tab => tab.urlHash === currentUrlHash);\r\n        return index !== -1 ? index : 0;\r\n    }\r\n\r\n    onTabClick(urlHash, index) {\r\n        const windowGlobal = typeof window !== \"undefined\" && window;\r\n        if (windowGlobal) {\r\n            windowGlobal.history.replaceState(undefined, undefined, urlHash);\r\n        }\r\n        this.setState({\r\n            selectedTabIndex: index\r\n        });\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport Layout from \"../layout/layout\";\r\nimport CardImageGallery from \"./cardImageGallery/cardImageGallery\";\r\nimport DraftSimulator from \"./draftSimulator/draftSimulator\";\r\nimport Tabs from \"./tabs\";\r\n\r\nexport default function TerraPage() {\r\n    const headerName = \"Terra 2170\";\r\n    const pages = [\r\n        { name: \"Card Image Gallery\", content: <CardImageGallery />, urlHash: \"#cards\" },\r\n        { name: \"Draft Simulator\", content: <DraftSimulator />, urlHash: \"#draftsim\" }\r\n    ];\r\n\r\n    return (\r\n        <Layout pageTitle={headerName}>\r\n            <Tabs header={headerName} content={pages} />\r\n        </Layout>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport TerraPage from \"../components/terraPage/terraPage\";\r\n\r\nexport default function Terra() {\r\n    return <TerraPage />;\r\n}\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport Img from \"gatsby-image\";\r\n\r\nexport default function HeaderIcon() {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query {\r\n                    placeholderImage: file(relativePath: { eq: \"icon.png\" }) {\r\n                        childImageSharp {\r\n                            fluid(maxWidth: 256) {\r\n                                ...GatsbyImageSharpFluid\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => <Img fluid={data.placeholderImage.childImageSharp.fluid} />}\r\n        />\r\n    );\r\n}\r\n","import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport HeaderIcon from \"../../images/headerIcon\";\r\nimport styles from \"./header.module.scss\";\r\n\r\nexport default function Header({ siteTitle }) {\r\n    return (\r\n        <div className={styles.header}>\r\n            <div className={styles.container}>\r\n                <Link to=\"/\" className={styles.homeLink}>\r\n                    <div className={styles.headerIcon}>\r\n                        <HeaderIcon />\r\n                    </div>\r\n                    <h1>{siteTitle}</h1>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport Helmet from \"react-helmet\";\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport Header from \"./header/header\";\r\nimport \"./layout.scss\";\r\n\r\nexport default function Layout({ pageTitle, children }) {\r\n    return (\r\n        <StaticQuery\r\n            query={graphql`\r\n                query SiteTitleQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                            title\r\n                        }\r\n                    }\r\n                }\r\n            `}\r\n            render={data => (\r\n                <>\r\n                    <Helmet title={pageTitle ? `${pageTitle} · Lost in Space` : \"Lost in Space\"}>\r\n                        <html lang=\"en\" />\r\n                        <link href=\"https://fonts.googleapis.com/css?family=Roboto\" rel=\"stylesheet\" />\r\n                    </Helmet>\r\n                    <Header siteTitle={data.site.siteMetadata.title} />\r\n                    <div className=\"layout-page-container\">{children}</div>\r\n                </>\r\n            )}\r\n        />\r\n    );\r\n}\r\n"],"sourceRoot":""}